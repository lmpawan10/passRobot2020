ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB130:
  27              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f4xx_it.c ****   *
  17:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f4xx_it.c ****   */
  19:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f4xx_it.c **** 
  21:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f4xx_it.c **** #include "main.h"
  23:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f4xx_it.c **** 
  28:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f4xx_it.c **** 
  31:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 2


  32:Core/Src/stm32f4xx_it.c **** 
  33:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f4xx_it.c ****  
  36:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f4xx_it.c **** 
  38:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f4xx_it.c **** 
  41:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f4xx_it.c **** 
  43:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f4xx_it.c **** 
  46:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f4xx_it.c **** 
  48:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f4xx_it.c **** 
  51:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f4xx_it.c **** 
  53:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f4xx_it.c **** 
  56:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f4xx_it.c **** 
  58:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  60:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim2;
  61:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim3;
  62:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim4;
  63:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim8;
  64:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_uart4_tx;
  65:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  66:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart4;
  67:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart2;
  68:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  69:Core/Src/stm32f4xx_it.c **** 
  70:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  71:Core/Src/stm32f4xx_it.c **** 
  72:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  73:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  74:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  75:Core/Src/stm32f4xx_it.c **** /**
  76:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  77:Core/Src/stm32f4xx_it.c ****   */
  78:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  79:Core/Src/stm32f4xx_it.c **** {
  28              		.loc 1 79 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  80:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  81:Core/Src/stm32f4xx_it.c **** 
  82:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  83:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 3


  84:Core/Src/stm32f4xx_it.c **** 
  85:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  86:Core/Src/stm32f4xx_it.c **** }
  33              		.loc 1 86 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE130:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	HardFault_Handler:
  47              	.LFB131:
  87:Core/Src/stm32f4xx_it.c **** 
  88:Core/Src/stm32f4xx_it.c **** /**
  89:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  90:Core/Src/stm32f4xx_it.c ****   */
  91:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  92:Core/Src/stm32f4xx_it.c **** {
  48              		.loc 1 92 0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  55 0000 FEE7     		b	.L3
  56              		.cfi_endproc
  57              	.LFE131:
  59              		.section	.text.MemManage_Handler,"ax",%progbits
  60              		.align	1
  61              		.global	MemManage_Handler
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv4-sp-d16
  67              	MemManage_Handler:
  68              	.LFB132:
  93:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  94:Core/Src/stm32f4xx_it.c **** 
  95:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  96:Core/Src/stm32f4xx_it.c ****   while (1)
  97:Core/Src/stm32f4xx_it.c ****   {
  98:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  99:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 100:Core/Src/stm32f4xx_it.c ****   }
 101:Core/Src/stm32f4xx_it.c **** }
 102:Core/Src/stm32f4xx_it.c **** 
 103:Core/Src/stm32f4xx_it.c **** /**
 104:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 105:Core/Src/stm32f4xx_it.c ****   */
 106:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 107:Core/Src/stm32f4xx_it.c **** {
  69              		.loc 1 107 0
ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 4


  70              		.cfi_startproc
  71              		@ Volatile: function does not return.
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.L5:
  76 0000 FEE7     		b	.L5
  77              		.cfi_endproc
  78              	.LFE132:
  80              		.section	.text.BusFault_Handler,"ax",%progbits
  81              		.align	1
  82              		.global	BusFault_Handler
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu fpv4-sp-d16
  88              	BusFault_Handler:
  89              	.LFB133:
 108:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f4xx_it.c **** 
 110:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 111:Core/Src/stm32f4xx_it.c ****   while (1)
 112:Core/Src/stm32f4xx_it.c ****   {
 113:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 114:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 115:Core/Src/stm32f4xx_it.c ****   }
 116:Core/Src/stm32f4xx_it.c **** }
 117:Core/Src/stm32f4xx_it.c **** 
 118:Core/Src/stm32f4xx_it.c **** /**
 119:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 120:Core/Src/stm32f4xx_it.c ****   */
 121:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 122:Core/Src/stm32f4xx_it.c **** {
  90              		.loc 1 122 0
  91              		.cfi_startproc
  92              		@ Volatile: function does not return.
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.L7:
  97 0000 FEE7     		b	.L7
  98              		.cfi_endproc
  99              	.LFE133:
 101              		.section	.text.UsageFault_Handler,"ax",%progbits
 102              		.align	1
 103              		.global	UsageFault_Handler
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv4-sp-d16
 109              	UsageFault_Handler:
 110              	.LFB134:
 123:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 124:Core/Src/stm32f4xx_it.c **** 
 125:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 126:Core/Src/stm32f4xx_it.c ****   while (1)
 127:Core/Src/stm32f4xx_it.c ****   {
ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 5


 128:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 129:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 130:Core/Src/stm32f4xx_it.c ****   }
 131:Core/Src/stm32f4xx_it.c **** }
 132:Core/Src/stm32f4xx_it.c **** 
 133:Core/Src/stm32f4xx_it.c **** /**
 134:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 135:Core/Src/stm32f4xx_it.c ****   */
 136:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 137:Core/Src/stm32f4xx_it.c **** {
 111              		.loc 1 137 0
 112              		.cfi_startproc
 113              		@ Volatile: function does not return.
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.L9:
 118 0000 FEE7     		b	.L9
 119              		.cfi_endproc
 120              	.LFE134:
 122              		.section	.text.SVC_Handler,"ax",%progbits
 123              		.align	1
 124              		.global	SVC_Handler
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	SVC_Handler:
 131              	.LFB135:
 138:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 139:Core/Src/stm32f4xx_it.c **** 
 140:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 141:Core/Src/stm32f4xx_it.c ****   while (1)
 142:Core/Src/stm32f4xx_it.c ****   {
 143:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 144:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 145:Core/Src/stm32f4xx_it.c ****   }
 146:Core/Src/stm32f4xx_it.c **** }
 147:Core/Src/stm32f4xx_it.c **** 
 148:Core/Src/stm32f4xx_it.c **** /**
 149:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 150:Core/Src/stm32f4xx_it.c ****   */
 151:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 152:Core/Src/stm32f4xx_it.c **** {
 132              		.loc 1 152 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 153:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 154:Core/Src/stm32f4xx_it.c **** 
 155:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 156:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 157:Core/Src/stm32f4xx_it.c **** 
 158:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 159:Core/Src/stm32f4xx_it.c **** }
 137              		.loc 1 159 0
ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 6


 138 0000 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE135:
 142              		.section	.text.DebugMon_Handler,"ax",%progbits
 143              		.align	1
 144              		.global	DebugMon_Handler
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	DebugMon_Handler:
 151              	.LFB136:
 160:Core/Src/stm32f4xx_it.c **** 
 161:Core/Src/stm32f4xx_it.c **** /**
 162:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 163:Core/Src/stm32f4xx_it.c ****   */
 164:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 165:Core/Src/stm32f4xx_it.c **** {
 152              		.loc 1 165 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 166:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 167:Core/Src/stm32f4xx_it.c **** 
 168:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 169:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 170:Core/Src/stm32f4xx_it.c **** 
 171:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 172:Core/Src/stm32f4xx_it.c **** }
 157              		.loc 1 172 0
 158 0000 7047     		bx	lr
 159              		.cfi_endproc
 160              	.LFE136:
 162              		.section	.text.PendSV_Handler,"ax",%progbits
 163              		.align	1
 164              		.global	PendSV_Handler
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	PendSV_Handler:
 171              	.LFB137:
 173:Core/Src/stm32f4xx_it.c **** 
 174:Core/Src/stm32f4xx_it.c **** /**
 175:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 176:Core/Src/stm32f4xx_it.c ****   */
 177:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 178:Core/Src/stm32f4xx_it.c **** {
 172              		.loc 1 178 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 179:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 180:Core/Src/stm32f4xx_it.c **** 
 181:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 7


 182:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 183:Core/Src/stm32f4xx_it.c **** 
 184:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 185:Core/Src/stm32f4xx_it.c **** }
 177              		.loc 1 185 0
 178 0000 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE137:
 182              		.section	.text.SysTick_Handler,"ax",%progbits
 183              		.align	1
 184              		.global	SysTick_Handler
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv4-sp-d16
 190              	SysTick_Handler:
 191              	.LFB138:
 186:Core/Src/stm32f4xx_it.c **** 
 187:Core/Src/stm32f4xx_it.c **** /**
 188:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 189:Core/Src/stm32f4xx_it.c ****   */
 190:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 191:Core/Src/stm32f4xx_it.c **** {
 192              		.loc 1 191 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196 0000 08B5     		push	{r3, lr}
 197              	.LCFI0:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 3, -8
 200              		.cfi_offset 14, -4
 192:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 193:Core/Src/stm32f4xx_it.c **** 
 194:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 195:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
 201              		.loc 1 195 0
 202 0002 FFF7FEFF 		bl	HAL_IncTick
 203              	.LVL0:
 196:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 197:Core/Src/stm32f4xx_it.c **** 
 198:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 199:Core/Src/stm32f4xx_it.c **** }
 204              		.loc 1 199 0
 205 0006 08BD     		pop	{r3, pc}
 206              		.cfi_endproc
 207              	.LFE138:
 209              		.section	.text.DMA1_Stream4_IRQHandler,"ax",%progbits
 210              		.align	1
 211              		.global	DMA1_Stream4_IRQHandler
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 215              		.fpu fpv4-sp-d16
 217              	DMA1_Stream4_IRQHandler:
 218              	.LFB139:
 200:Core/Src/stm32f4xx_it.c **** 
ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 8


 201:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 202:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 203:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 204:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 205:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 206:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 207:Core/Src/stm32f4xx_it.c **** 
 208:Core/Src/stm32f4xx_it.c **** /**
 209:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream4 global interrupt.
 210:Core/Src/stm32f4xx_it.c ****   */
 211:Core/Src/stm32f4xx_it.c **** void DMA1_Stream4_IRQHandler(void)
 212:Core/Src/stm32f4xx_it.c **** {
 219              		.loc 1 212 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223 0000 08B5     		push	{r3, lr}
 224              	.LCFI1:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 3, -8
 227              		.cfi_offset 14, -4
 213:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */
 214:Core/Src/stm32f4xx_it.c **** 
 215:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 0 */
 216:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_uart4_tx);
 228              		.loc 1 216 0
 229 0002 0248     		ldr	r0, .L17
 230 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 231              	.LVL1:
 217:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */
 218:Core/Src/stm32f4xx_it.c **** 
 219:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 1 */
 220:Core/Src/stm32f4xx_it.c **** }
 232              		.loc 1 220 0
 233 0008 08BD     		pop	{r3, pc}
 234              	.L18:
 235 000a 00BF     		.align	2
 236              	.L17:
 237 000c 00000000 		.word	hdma_uart4_tx
 238              		.cfi_endproc
 239              	.LFE139:
 241              		.section	.text.DMA1_Stream5_IRQHandler,"ax",%progbits
 242              		.align	1
 243              		.global	DMA1_Stream5_IRQHandler
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv4-sp-d16
 249              	DMA1_Stream5_IRQHandler:
 250              	.LFB140:
 221:Core/Src/stm32f4xx_it.c **** 
 222:Core/Src/stm32f4xx_it.c **** /**
 223:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream5 global interrupt.
 224:Core/Src/stm32f4xx_it.c ****   */
 225:Core/Src/stm32f4xx_it.c **** void DMA1_Stream5_IRQHandler(void)
 226:Core/Src/stm32f4xx_it.c **** {
 251              		.loc 1 226 0
ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 9


 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255 0000 08B5     		push	{r3, lr}
 256              	.LCFI2:
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 3, -8
 259              		.cfi_offset 14, -4
 227:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */
 228:Core/Src/stm32f4xx_it.c **** 
 229:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 0 */
 230:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_rx);
 260              		.loc 1 230 0
 261 0002 0248     		ldr	r0, .L21
 262 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 263              	.LVL2:
 231:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */
 232:Core/Src/stm32f4xx_it.c **** 
 233:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 1 */
 234:Core/Src/stm32f4xx_it.c **** }
 264              		.loc 1 234 0
 265 0008 08BD     		pop	{r3, pc}
 266              	.L22:
 267 000a 00BF     		.align	2
 268              	.L21:
 269 000c 00000000 		.word	hdma_usart2_rx
 270              		.cfi_endproc
 271              	.LFE140:
 273              		.section	.text.TIM1_BRK_TIM9_IRQHandler,"ax",%progbits
 274              		.align	1
 275              		.global	TIM1_BRK_TIM9_IRQHandler
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu fpv4-sp-d16
 281              	TIM1_BRK_TIM9_IRQHandler:
 282              	.LFB141:
 235:Core/Src/stm32f4xx_it.c **** 
 236:Core/Src/stm32f4xx_it.c **** /**
 237:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 break interrupt and TIM9 global interrupt.
 238:Core/Src/stm32f4xx_it.c ****   */
 239:Core/Src/stm32f4xx_it.c **** void TIM1_BRK_TIM9_IRQHandler(void)
 240:Core/Src/stm32f4xx_it.c **** {
 283              		.loc 1 240 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287 0000 08B5     		push	{r3, lr}
 288              	.LCFI3:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 3, -8
 291              		.cfi_offset 14, -4
 241:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 0 */
 242:Core/Src/stm32f4xx_it.c **** 
 243:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_BRK_TIM9_IRQn 0 */
 244:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 292              		.loc 1 244 0
ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 10


 293 0002 0248     		ldr	r0, .L25
 294 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 295              	.LVL3:
 245:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 1 */
 246:Core/Src/stm32f4xx_it.c **** 
 247:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_BRK_TIM9_IRQn 1 */
 248:Core/Src/stm32f4xx_it.c **** }
 296              		.loc 1 248 0
 297 0008 08BD     		pop	{r3, pc}
 298              	.L26:
 299 000a 00BF     		.align	2
 300              	.L25:
 301 000c 00000000 		.word	htim1
 302              		.cfi_endproc
 303              	.LFE141:
 305              		.section	.text.TIM1_UP_TIM10_IRQHandler,"ax",%progbits
 306              		.align	1
 307              		.global	TIM1_UP_TIM10_IRQHandler
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 311              		.fpu fpv4-sp-d16
 313              	TIM1_UP_TIM10_IRQHandler:
 314              	.LFB142:
 249:Core/Src/stm32f4xx_it.c **** 
 250:Core/Src/stm32f4xx_it.c **** /**
 251:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
 252:Core/Src/stm32f4xx_it.c ****   */
 253:Core/Src/stm32f4xx_it.c **** void TIM1_UP_TIM10_IRQHandler(void)
 254:Core/Src/stm32f4xx_it.c **** {
 315              		.loc 1 254 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319 0000 08B5     		push	{r3, lr}
 320              	.LCFI4:
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 3, -8
 323              		.cfi_offset 14, -4
 255:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */
 256:Core/Src/stm32f4xx_it.c **** 
 257:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
 258:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 324              		.loc 1 258 0
 325 0002 0248     		ldr	r0, .L29
 326 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 327              	.LVL4:
 259:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */
 260:Core/Src/stm32f4xx_it.c **** 
 261:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
 262:Core/Src/stm32f4xx_it.c **** }
 328              		.loc 1 262 0
 329 0008 08BD     		pop	{r3, pc}
 330              	.L30:
 331 000a 00BF     		.align	2
 332              	.L29:
 333 000c 00000000 		.word	htim1
ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 11


 334              		.cfi_endproc
 335              	.LFE142:
 337              		.section	.text.TIM1_TRG_COM_TIM11_IRQHandler,"ax",%progbits
 338              		.align	1
 339              		.global	TIM1_TRG_COM_TIM11_IRQHandler
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu fpv4-sp-d16
 345              	TIM1_TRG_COM_TIM11_IRQHandler:
 346              	.LFB143:
 263:Core/Src/stm32f4xx_it.c **** 
 264:Core/Src/stm32f4xx_it.c **** /**
 265:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 trigger and commutation interrupts and TIM11 global interrupt
 266:Core/Src/stm32f4xx_it.c ****   */
 267:Core/Src/stm32f4xx_it.c **** void TIM1_TRG_COM_TIM11_IRQHandler(void)
 268:Core/Src/stm32f4xx_it.c **** {
 347              		.loc 1 268 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351 0000 08B5     		push	{r3, lr}
 352              	.LCFI5:
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 3, -8
 355              		.cfi_offset 14, -4
 269:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_TIM11_IRQn 0 */
 270:Core/Src/stm32f4xx_it.c **** 
 271:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_TRG_COM_TIM11_IRQn 0 */
 272:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 356              		.loc 1 272 0
 357 0002 0248     		ldr	r0, .L33
 358 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 359              	.LVL5:
 273:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_TIM11_IRQn 1 */
 274:Core/Src/stm32f4xx_it.c **** 
 275:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_TRG_COM_TIM11_IRQn 1 */
 276:Core/Src/stm32f4xx_it.c **** }
 360              		.loc 1 276 0
 361 0008 08BD     		pop	{r3, pc}
 362              	.L34:
 363 000a 00BF     		.align	2
 364              	.L33:
 365 000c 00000000 		.word	htim1
 366              		.cfi_endproc
 367              	.LFE143:
 369              		.section	.text.TIM1_CC_IRQHandler,"ax",%progbits
 370              		.align	1
 371              		.global	TIM1_CC_IRQHandler
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu fpv4-sp-d16
 377              	TIM1_CC_IRQHandler:
 378              	.LFB144:
 277:Core/Src/stm32f4xx_it.c **** 
 278:Core/Src/stm32f4xx_it.c **** /**
ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 12


 279:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 capture compare interrupt.
 280:Core/Src/stm32f4xx_it.c ****   */
 281:Core/Src/stm32f4xx_it.c **** void TIM1_CC_IRQHandler(void)
 282:Core/Src/stm32f4xx_it.c **** {
 379              		.loc 1 282 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383 0000 08B5     		push	{r3, lr}
 384              	.LCFI6:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 3, -8
 387              		.cfi_offset 14, -4
 283:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_CC_IRQn 0 */
 284:Core/Src/stm32f4xx_it.c **** 
 285:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_CC_IRQn 0 */
 286:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 388              		.loc 1 286 0
 389 0002 0248     		ldr	r0, .L37
 390 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 391              	.LVL6:
 287:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_CC_IRQn 1 */
 288:Core/Src/stm32f4xx_it.c **** 
 289:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_CC_IRQn 1 */
 290:Core/Src/stm32f4xx_it.c **** }
 392              		.loc 1 290 0
 393 0008 08BD     		pop	{r3, pc}
 394              	.L38:
 395 000a 00BF     		.align	2
 396              	.L37:
 397 000c 00000000 		.word	htim1
 398              		.cfi_endproc
 399              	.LFE144:
 401              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 402              		.align	1
 403              		.global	TIM2_IRQHandler
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
 409              	TIM2_IRQHandler:
 410              	.LFB145:
 291:Core/Src/stm32f4xx_it.c **** 
 292:Core/Src/stm32f4xx_it.c **** /**
 293:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 294:Core/Src/stm32f4xx_it.c ****   */
 295:Core/Src/stm32f4xx_it.c **** void TIM2_IRQHandler(void)
 296:Core/Src/stm32f4xx_it.c **** {
 411              		.loc 1 296 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415 0000 08B5     		push	{r3, lr}
 416              	.LCFI7:
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 3, -8
 419              		.cfi_offset 14, -4
ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 13


 297:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 298:Core/Src/stm32f4xx_it.c **** 
 299:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 300:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 420              		.loc 1 300 0
 421 0002 0248     		ldr	r0, .L41
 422 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 423              	.LVL7:
 301:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 302:Core/Src/stm32f4xx_it.c **** 
 303:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 304:Core/Src/stm32f4xx_it.c **** }
 424              		.loc 1 304 0
 425 0008 08BD     		pop	{r3, pc}
 426              	.L42:
 427 000a 00BF     		.align	2
 428              	.L41:
 429 000c 00000000 		.word	htim2
 430              		.cfi_endproc
 431              	.LFE145:
 433              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 434              		.align	1
 435              		.global	TIM3_IRQHandler
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu fpv4-sp-d16
 441              	TIM3_IRQHandler:
 442              	.LFB146:
 305:Core/Src/stm32f4xx_it.c **** 
 306:Core/Src/stm32f4xx_it.c **** /**
 307:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 308:Core/Src/stm32f4xx_it.c ****   */
 309:Core/Src/stm32f4xx_it.c **** void TIM3_IRQHandler(void)
 310:Core/Src/stm32f4xx_it.c **** {
 443              		.loc 1 310 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447 0000 08B5     		push	{r3, lr}
 448              	.LCFI8:
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 3, -8
 451              		.cfi_offset 14, -4
 311:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 312:Core/Src/stm32f4xx_it.c **** 
 313:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 314:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 452              		.loc 1 314 0
 453 0002 0248     		ldr	r0, .L45
 454 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 455              	.LVL8:
 315:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 316:Core/Src/stm32f4xx_it.c **** 
 317:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 318:Core/Src/stm32f4xx_it.c **** }
 456              		.loc 1 318 0
ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 14


 457 0008 08BD     		pop	{r3, pc}
 458              	.L46:
 459 000a 00BF     		.align	2
 460              	.L45:
 461 000c 00000000 		.word	htim3
 462              		.cfi_endproc
 463              	.LFE146:
 465              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 466              		.align	1
 467              		.global	TIM4_IRQHandler
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 471              		.fpu fpv4-sp-d16
 473              	TIM4_IRQHandler:
 474              	.LFB147:
 319:Core/Src/stm32f4xx_it.c **** 
 320:Core/Src/stm32f4xx_it.c **** /**
 321:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM4 global interrupt.
 322:Core/Src/stm32f4xx_it.c ****   */
 323:Core/Src/stm32f4xx_it.c **** void TIM4_IRQHandler(void)
 324:Core/Src/stm32f4xx_it.c **** {
 475              		.loc 1 324 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479 0000 08B5     		push	{r3, lr}
 480              	.LCFI9:
 481              		.cfi_def_cfa_offset 8
 482              		.cfi_offset 3, -8
 483              		.cfi_offset 14, -4
 325:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 0 */
 326:Core/Src/stm32f4xx_it.c **** 
 327:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 0 */
 328:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim4);
 484              		.loc 1 328 0
 485 0002 0248     		ldr	r0, .L49
 486 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 487              	.LVL9:
 329:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 1 */
 330:Core/Src/stm32f4xx_it.c **** 
 331:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 1 */
 332:Core/Src/stm32f4xx_it.c **** }
 488              		.loc 1 332 0
 489 0008 08BD     		pop	{r3, pc}
 490              	.L50:
 491 000a 00BF     		.align	2
 492              	.L49:
 493 000c 00000000 		.word	htim4
 494              		.cfi_endproc
 495              	.LFE147:
 497              		.section	.text.USART2_IRQHandler,"ax",%progbits
 498              		.align	1
 499              		.global	USART2_IRQHandler
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 15


 503              		.fpu fpv4-sp-d16
 505              	USART2_IRQHandler:
 506              	.LFB148:
 333:Core/Src/stm32f4xx_it.c **** 
 334:Core/Src/stm32f4xx_it.c **** /**
 335:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART2 global interrupt.
 336:Core/Src/stm32f4xx_it.c ****   */
 337:Core/Src/stm32f4xx_it.c **** void USART2_IRQHandler(void)
 338:Core/Src/stm32f4xx_it.c **** {
 507              		.loc 1 338 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511 0000 08B5     		push	{r3, lr}
 512              	.LCFI10:
 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 3, -8
 515              		.cfi_offset 14, -4
 339:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 340:Core/Src/stm32f4xx_it.c **** 
 341:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 342:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 516              		.loc 1 342 0
 517 0002 0248     		ldr	r0, .L53
 518 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 519              	.LVL10:
 343:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 344:Core/Src/stm32f4xx_it.c **** 
 345:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 346:Core/Src/stm32f4xx_it.c **** }
 520              		.loc 1 346 0
 521 0008 08BD     		pop	{r3, pc}
 522              	.L54:
 523 000a 00BF     		.align	2
 524              	.L53:
 525 000c 00000000 		.word	huart2
 526              		.cfi_endproc
 527              	.LFE148:
 529              		.section	.text.TIM8_UP_TIM13_IRQHandler,"ax",%progbits
 530              		.align	1
 531              		.global	TIM8_UP_TIM13_IRQHandler
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 535              		.fpu fpv4-sp-d16
 537              	TIM8_UP_TIM13_IRQHandler:
 538              	.LFB149:
 347:Core/Src/stm32f4xx_it.c **** 
 348:Core/Src/stm32f4xx_it.c **** /**
 349:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM8 update interrupt and TIM13 global interrupt.
 350:Core/Src/stm32f4xx_it.c ****   */
 351:Core/Src/stm32f4xx_it.c **** void TIM8_UP_TIM13_IRQHandler(void)
 352:Core/Src/stm32f4xx_it.c **** {
 539              		.loc 1 352 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 16


 543 0000 08B5     		push	{r3, lr}
 544              	.LCFI11:
 545              		.cfi_def_cfa_offset 8
 546              		.cfi_offset 3, -8
 547              		.cfi_offset 14, -4
 353:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */
 354:Core/Src/stm32f4xx_it.c **** 
 355:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
 356:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim8);
 548              		.loc 1 356 0
 549 0002 0248     		ldr	r0, .L57
 550 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 551              	.LVL11:
 357:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 1 */
 358:Core/Src/stm32f4xx_it.c **** 
 359:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM8_UP_TIM13_IRQn 1 */
 360:Core/Src/stm32f4xx_it.c **** }
 552              		.loc 1 360 0
 553 0008 08BD     		pop	{r3, pc}
 554              	.L58:
 555 000a 00BF     		.align	2
 556              	.L57:
 557 000c 00000000 		.word	htim8
 558              		.cfi_endproc
 559              	.LFE149:
 561              		.section	.text.UART4_IRQHandler,"ax",%progbits
 562              		.align	1
 563              		.global	UART4_IRQHandler
 564              		.syntax unified
 565              		.thumb
 566              		.thumb_func
 567              		.fpu fpv4-sp-d16
 569              	UART4_IRQHandler:
 570              	.LFB150:
 361:Core/Src/stm32f4xx_it.c **** 
 362:Core/Src/stm32f4xx_it.c **** /**
 363:Core/Src/stm32f4xx_it.c ****   * @brief This function handles UART4 global interrupt.
 364:Core/Src/stm32f4xx_it.c ****   */
 365:Core/Src/stm32f4xx_it.c **** void UART4_IRQHandler(void)
 366:Core/Src/stm32f4xx_it.c **** {
 571              		.loc 1 366 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575 0000 08B5     		push	{r3, lr}
 576              	.LCFI12:
 577              		.cfi_def_cfa_offset 8
 578              		.cfi_offset 3, -8
 579              		.cfi_offset 14, -4
 367:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UART4_IRQn 0 */
 368:Core/Src/stm32f4xx_it.c **** 
 369:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UART4_IRQn 0 */
 370:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart4);
 580              		.loc 1 370 0
 581 0002 0248     		ldr	r0, .L61
 582 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 583              	.LVL12:
ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 17


 371:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UART4_IRQn 1 */
 372:Core/Src/stm32f4xx_it.c **** 
 373:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UART4_IRQn 1 */
 374:Core/Src/stm32f4xx_it.c **** }
 584              		.loc 1 374 0
 585 0008 08BD     		pop	{r3, pc}
 586              	.L62:
 587 000a 00BF     		.align	2
 588              	.L61:
 589 000c 00000000 		.word	huart4
 590              		.cfi_endproc
 591              	.LFE150:
 593              		.text
 594              	.Letext0:
 595              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 596              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 597              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 598              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 599              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 600              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 601              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 602              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 603              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 604              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:18     .text.NMI_Handler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:39     .text.HardFault_Handler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:46     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:60     .text.MemManage_Handler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:67     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:81     .text.BusFault_Handler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:88     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:102    .text.UsageFault_Handler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:109    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:123    .text.SVC_Handler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:130    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:143    .text.DebugMon_Handler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:150    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:163    .text.PendSV_Handler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:170    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:183    .text.SysTick_Handler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:190    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:210    .text.DMA1_Stream4_IRQHandler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:217    .text.DMA1_Stream4_IRQHandler:00000000 DMA1_Stream4_IRQHandler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:237    .text.DMA1_Stream4_IRQHandler:0000000c $d
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:242    .text.DMA1_Stream5_IRQHandler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:249    .text.DMA1_Stream5_IRQHandler:00000000 DMA1_Stream5_IRQHandler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:269    .text.DMA1_Stream5_IRQHandler:0000000c $d
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:274    .text.TIM1_BRK_TIM9_IRQHandler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:281    .text.TIM1_BRK_TIM9_IRQHandler:00000000 TIM1_BRK_TIM9_IRQHandler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:301    .text.TIM1_BRK_TIM9_IRQHandler:0000000c $d
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:306    .text.TIM1_UP_TIM10_IRQHandler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:313    .text.TIM1_UP_TIM10_IRQHandler:00000000 TIM1_UP_TIM10_IRQHandler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:333    .text.TIM1_UP_TIM10_IRQHandler:0000000c $d
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:338    .text.TIM1_TRG_COM_TIM11_IRQHandler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:345    .text.TIM1_TRG_COM_TIM11_IRQHandler:00000000 TIM1_TRG_COM_TIM11_IRQHandler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:365    .text.TIM1_TRG_COM_TIM11_IRQHandler:0000000c $d
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:370    .text.TIM1_CC_IRQHandler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:377    .text.TIM1_CC_IRQHandler:00000000 TIM1_CC_IRQHandler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:397    .text.TIM1_CC_IRQHandler:0000000c $d
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:402    .text.TIM2_IRQHandler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:409    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:429    .text.TIM2_IRQHandler:0000000c $d
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:434    .text.TIM3_IRQHandler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:441    .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:461    .text.TIM3_IRQHandler:0000000c $d
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:466    .text.TIM4_IRQHandler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:473    .text.TIM4_IRQHandler:00000000 TIM4_IRQHandler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:493    .text.TIM4_IRQHandler:0000000c $d
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:498    .text.USART2_IRQHandler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:505    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:525    .text.USART2_IRQHandler:0000000c $d
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:530    .text.TIM8_UP_TIM13_IRQHandler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:537    .text.TIM8_UP_TIM13_IRQHandler:00000000 TIM8_UP_TIM13_IRQHandler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:557    .text.TIM8_UP_TIM13_IRQHandler:0000000c $d
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:562    .text.UART4_IRQHandler:00000000 $t
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:569    .text.UART4_IRQHandler:00000000 UART4_IRQHandler
C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s:589    .text.UART4_IRQHandler:0000000c $d

ARM GAS  C:\Users\Aasman\AppData\Local\Temp\ccnthSaZ.s 			page 19


UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_uart4_tx
hdma_usart2_rx
HAL_TIM_IRQHandler
htim1
htim2
htim3
htim4
HAL_UART_IRQHandler
huart2
htim8
huart4
